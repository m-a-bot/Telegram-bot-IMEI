version: "3.8"
services:

  bot:
    container_name: telegram-bot-service
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8443:8443"
    depends_on:
      redis:
        condition: service_started
      ngrok:
        condition: service_started
    networks:
      - bot_network
    restart: always

  redis:
    image: redis:latest
    container_name: telegram-bot_db
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    networks:
      - bot_network
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
        echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
        echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
        echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
        echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
        echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    ports:
    - "4040:4040"
    env_file:
      - .env
    command: http --domain=${STATIC_DOMAIN} bot:8443
    networks:
      - bot_network
    restart: always

volumes:
  redis_data:

networks:
  bot_network:
    driver: bridge